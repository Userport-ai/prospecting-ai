steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args: [
      'build',
      '-t', 'gcr.io/omega-winter-431704-u5/prefect-server:latest',
      '-f', 'workers/scripts/prefect_server/Dockerfile',
      '.'
    ]

  # Push the image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args: ['push', 'gcr.io/omega-winter-431704-u5/prefect-server:latest']
    waitFor: ['build']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: gcloud
    args: [
      'run',
      'deploy',
      'prefect-server',
      '--image=gcr.io/omega-winter-431704-u5/prefect-server:latest',
      '--platform=managed',
      '--region=us-east1',
      '--no-allow-unauthenticated',
      '--memory=1Gi',
      '--cpu=1',
      '--min-instances=1',
      '--add-cloudsql-instances=omega-winter-431704-u5:us-east1:prefect-db',
      '--set-secrets=PREFECT_DB_PASSWORD=prefect-db-password:latest',
      '--timeout=300s'
    ]
    waitFor: ['push']

  # Configure Cloud Run for load balancer ingress (required for IAP)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'configure-ingress'
    entrypoint: gcloud
    args: [
      'run', 'services', 'update',
      'prefect-server',
      '--region=us-east1',
      '--ingress=internal-and-cloud-load-balancing'
    ]
    waitFor: ['deploy']

timeout: 1800s

options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true

images:
  - 'gcr.io/omega-winter-431704-u5/prefect-server:latest'