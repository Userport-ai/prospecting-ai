# Generated by Django 5.1.4 on 2024-12-16 10:37

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('tenant_admin', 'Tenant Admin'), ('internal_cs', 'Internal CS'), ('internal_admin', 'Internal Admin')], default='user', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('icp_description', models.TextField(blank=True, null=True)),
                ('persona_role_titles', models.JSONField()),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField(blank=True, max_length=512, null=True)),
                ('linkedin_url', models.URLField(blank=True, max_length=512, null=True)),
                ('industry', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('employee_count', models.IntegerField(blank=True, null=True)),
                ('company_type', models.CharField(blank=True, max_length=100, null=True)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('technologies', models.JSONField(blank=True, null=True)),
                ('funding_details', models.JSONField(blank=True, null=True)),
                ('enrichment_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=50)),
                ('enrichment_sources', models.JSONField(blank=True, null=True)),
                ('last_enriched_at', models.DateTimeField(blank=True, null=True)),
                ('custom_fields', models.JSONField(blank=True, null=True)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_accounts', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
            options={
                'db_table': 'accounts',
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('website', models.URLField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tenants',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tenant'),
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('role_title', models.CharField(blank=True, max_length=255, null=True)),
                ('linkedin_url', models.URLField(blank=True, max_length=512, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('enrichment_status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=50)),
                ('custom_fields', models.JSONField(blank=True, null=True)),
                ('linkedin_activity', models.JSONField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('last_enriched_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_leads', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tenant')),
            ],
            options={
                'db_table': 'leads',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tenant'),
        ),
        migrations.AddField(
            model_name='user',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tenant'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['status'], name='tenants_status_80d9b6_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=models.Index(fields=['website'], name='tenants_website_7f429f_idx'),
        ),
        migrations.AddIndex(
            model_name='tenant',
            index=django.contrib.postgres.indexes.GinIndex(fields=['settings'], name='tenants_setting_6d95e2_gin'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_name_6f9890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_by'], name='products_created_ab8721_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('tenant', 'name')},
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['email'], name='leads_email_554d9f_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['linkedin_url'], name='leads_linkedi_d5384e_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['role_title'], name='leads_role_ti_ee55cd_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['enrichment_status'], name='leads_enrichm_074a48_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['score'], name='leads_score_7739f8_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['name'], name='accounts_name_94ecef_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['website'], name='accounts_website_5bba36_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='users_status_9ca66f_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_0ace22_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('tenant', 'email')},
        ),
    ]
